{"version":3,"file":"js/Cate_Params.629658cd.js","mappings":"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","sources":["webpack://vue_shop/./src/components/goods/GoodsCate.vue","webpack://vue_shop/src/components/goods/GoodsCate.vue","webpack://vue_shop/./src/components/goods/GoodsCate.vue?c6e2","webpack://vue_shop/./src/components/goods/GoodsCate.vue?1c89","webpack://vue_shop/./src/components/goods/GoodsParams.vue","webpack://vue_shop/src/components/goods/GoodsParams.vue","webpack://vue_shop/./src/components/goods/GoodsParams.vue?8253","webpack://vue_shop/./src/components/goods/GoodsParams.vue?7f0f"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品分类\")])],1),_c('el-card',[_c('el-row',[_c('el-col',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.showAddCateDialog}},[_vm._v(\"添加分类\")])],1)],1),_c('tree-table',{staticClass:\"treeTable\",attrs:{\"data\":_vm.catelist,\"columns\":_vm.columns,\"selection-type\":false,\"expand-type\":false,\"show-index\":\"\",\"index-text\":\"#\",\"border\":\"\",\"show-row-hover\":false},scopedSlots:_vm._u([{key:\"isok\",fn:function(scope){return [(scope.row.cat_deleted === false)?_c('i',{staticClass:\"el-icon-success\",staticStyle:{\"color\":\"lightgreen\"}}):_c('i',{staticClass:\"el-icon-error\",staticStyle:{\"color\":\"red\"}})]}},{key:\"order\",fn:function(scope){return [(scope.row.cat_level === 0)?_c('el-tag',{attrs:{\"size\":\"mini\"}},[_vm._v(\"一级\")]):(scope.row.cat_level === 1)?_c('el-tag',{attrs:{\"type\":\"success\",\"size\":\"mini\"}},[_vm._v(\"二级\")]):(scope.row.cat_level === 2)?_c('el-tag',{attrs:{\"type\":\"warning\",\"size\":\"mini\"}},[_vm._v(\"三级\")]):_vm._e()]}},{key:\"opt\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-deit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.showEditCateDialog(scope.row.cat_name, scope.row.cat_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.deleteCate(scope.row.cat_id)}}},[_vm._v(\"删除\")])]}}])}),_c('el-pagination',{attrs:{\"current-page\":_vm.querInfo.pagenum,\"page-sizes\":[3, 5, 10, 15],\"page-size\":_vm.querInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{attrs:{\"title\":\"添加分类\",\"visible\":_vm.addCateDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addCateDialogVisible=$event},\"close\":_vm.addCateDialogClosed}},[_c('el-form',{ref:\"addCateFormRef\",attrs:{\"model\":_vm.addCateForm,\"rules\":_vm.addCateFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.addCateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.addCateForm, \"cat_name\", $$v)},expression:\"addCateForm.cat_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"父级分类\"}},[_c('el-cascader',{attrs:{\"options\":_vm.parentCateList,\"props\":_vm.cascaderProps,\"clearable\":\"\",\"change-on-select\":\"\"},on:{\"change\":_vm.parentCateChanged},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addCateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCate}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"编辑分类\",\"visible\":_vm.editCateDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editCateDialogVisible=$event}}},[_c('el-form',{ref:\"editCateRef\",attrs:{\"model\":_vm.cate,\"rules\":_vm.cateRules,\"label-width\":\"70px\"}},[_c('el-form-item',{attrs:{\"label\":\"用户名\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.cate.name),callback:function ($$v) {_vm.$set(_vm.cate, \"name\", $$v)},expression:\"cate.name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editCateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editCate}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\" @click=\"showAddCateDialog\"\r\n            >添加分类</el-button\r\n          >\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 表格 tree-table是第三方库的 -->\r\n      <tree-table\r\n        :data=\"catelist\"\r\n        :columns=\"columns\"\r\n        :selection-type=\"false\"\r\n        :expand-type=\"false\"\r\n        show-index\r\n        index-text=\"#\"\r\n        border\r\n        :show-row-hover=\"false\"\r\n        class=\"treeTable\"\r\n      >\r\n        <!-- 是否有效 -->\r\n        <template slot-scope=\"scope\" slot=\"isok\">\r\n          <i\r\n            class=\"el-icon-success\"\r\n            v-if=\"scope.row.cat_deleted === false\"\r\n            style=\"color: lightgreen\"\r\n          ></i>\r\n          <i class=\"el-icon-error\" v-else style=\"color: red\"></i>\r\n        </template>\r\n        <!-- 排序 -->\r\n        <template slot-scope=\"scope\" slot=\"order\">\r\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level === 0\">一级</el-tag>\r\n          <el-tag\r\n            type=\"success\"\r\n            size=\"mini\"\r\n            v-else-if=\"scope.row.cat_level === 1\"\r\n            >二级</el-tag\r\n          >\r\n          <el-tag\r\n            type=\"warning\"\r\n            size=\"mini\"\r\n            v-else-if=\"scope.row.cat_level === 2\"\r\n            >三级</el-tag\r\n          >\r\n        </template>\r\n        <!-- 操作 -->\r\n        <template slot=\"opt\" slot-scope=\"scope\">\r\n          <el-button\r\n            type=\"primary\"\r\n            icon=\"el-icon-deit\"\r\n            size=\"mini\"\r\n            @click=\"showEditCateDialog(scope.row.cat_name, scope.row.cat_id)\"\r\n            >编辑</el-button\r\n          >\r\n          <el-button\r\n            type=\"danger\"\r\n            icon=\"el-icon-delete\"\r\n            size=\"mini\"\r\n            @click=\"deleteCate(scope.row.cat_id)\"\r\n            >删除</el-button\r\n          >\r\n        </template>\r\n      </tree-table>\r\n\r\n      <!-- 分页区域 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"querInfo.pagenum\"\r\n        :page-sizes=\"[3, 5, 10, 15]\"\r\n        :page-size=\"querInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 添加分类的对话框 -->\r\n    <el-dialog\r\n      title=\"添加分类\"\r\n      :visible.sync=\"addCateDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addCateDialogClosed\"\r\n    >\r\n      <!-- 添加分类的表单 -->\r\n      <el-form\r\n        :model=\"addCateForm\"\r\n        :rules=\"addCateFormRules\"\r\n        ref=\"addCateFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"分类名称\" prop=\"cat_name\">\r\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类\">\r\n          <!-- options用来指定数据源 -->\r\n          <!-- props用来指定配置对象 -->\r\n          <!-- v-model所绑定的对象必须是一个数组 -->\r\n          <el-cascader\r\n            v-model=\"selectedKeys\"\r\n            :options=\"parentCateList\"\r\n            :props=\"cascaderProps\"\r\n            @change=\"parentCateChanged\"\r\n            clearable\r\n            change-on-select\r\n          ></el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 取消与确定按钮 -->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 编辑商品分类的对话框 -->\r\n    <el-dialog\r\n      title=\"编辑分类\"\r\n      :visible.sync=\"editCateDialogVisible\"\r\n      width=\"50%\"\r\n    >\r\n      <!-- 内容主体区域 -->\r\n      <el-form\r\n        :model=\"cate\"\r\n        :rules=\"cateRules\"\r\n        ref=\"editCateRef\"\r\n        label-width=\"70px\"\r\n      >\r\n        <el-form-item label=\"用户名\" prop=\"name\">\r\n          <el-input v-model=\"cate.name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 底部取消与确认区 -->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editCateDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editCate\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"GoodsCate\",\r\n  data() {\r\n    return {\r\n      // 编辑商品分类的规则\r\n      cateRules: {\r\n        name: [\r\n          { required: true, message: \"请输入分类名称\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 存放编辑商品分类的\r\n      cate: {\r\n        id:0,\r\n        name:''\r\n      },\r\n      // 编辑商品分类对话框是否可见\r\n      editCateDialogVisible: false,\r\n      // 选中的父级分类的Id数组\r\n      selectedKeys: [],\r\n      // 指定级联选择器的配置对象\r\n      cascaderProps: {\r\n        value: \"cat_id\",\r\n        label: \"cat_name\",\r\n        children: \"children\",\r\n        expandTrigger: \"hover\",\r\n      },\r\n      // 父级分类的列表\r\n      parentCateList: [],\r\n      // 添加分类表单的验证规则对象\r\n      addCateFormRules: {\r\n        cat_name: [\r\n          { required: true, message: \"请输入分类名称\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 添加分类的表单数据对象\r\n      addCateForm: {\r\n        // 将要添加的分类的名称\r\n        cat_name: \"\",\r\n        // 父级分类的Id\r\n        cat_pid: 0,\r\n        // 分类的等级，默认要添加的是1级分类\r\n        cat_level: 0,\r\n      },\r\n      // 控制添加分类对话框的显示与隐藏\r\n      addCateDialogVisible: false,\r\n      // 为table指定列的定义\r\n      columns: [\r\n        {\r\n          label: \"分类名称\",\r\n          prop: \"cat_name\",\r\n        },\r\n        {\r\n          label: \"是否有效\",\r\n          // 表示，将当前列定义为模板列\r\n          type: \"template\",\r\n          // 表示当前这一列使用模板名称\r\n          template: \"isok\",\r\n        },\r\n        {\r\n          label: \"排序\",\r\n          type: \"template\",\r\n          template: \"order\",\r\n        },\r\n        {\r\n          label: \"操作\",\r\n          type: \"template\",\r\n          template: \"opt\",\r\n        },\r\n      ],\r\n      // 总数据条数\r\n      total: 0,\r\n      // 查询商品分类数据的参数\r\n      querInfo: {\r\n        type: 3,\r\n        pagenum: 1,\r\n        pagesize: 5,\r\n      },\r\n      // 商品分类的数据列表，默认为空\r\n      catelist: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.getCateList();\r\n  },\r\n  methods: {\r\n    // 删除商品分类\r\n    async deleteCate(id){\r\n        // 先弹窗询问用户是否确定删除数据\r\n        const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该分类，是否继续？\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n        // 要通过catch对本次Promise的结果进行捕获，否则报错\r\n      ).catch((err) => err);\r\n\r\n      // 备注：\r\n      // 如果用户确定删除，则返回值为字符串confirm\r\n      // 如果用户取消了删除，则返回值为字符串cancel\r\n      if (confirmResult !== \"confirm\") {\r\n        return this.$message.info(\"已取消删除\");\r\n      } else {\r\n        // 用户确认，发起请求进行删除\r\n        const {data:res} = await this.$http.delete(`categories/${id}`)\r\n        if(res.meta.status !== 200){\r\n          return this.$message.error(\"删除分类失败！\");\r\n        }\r\n        this.$message.success(\"删除分类成功！\");\r\n        this.getCateList();\r\n      }\r\n    },\r\n    // 编辑商品分类\r\n    editCate(){\r\n      // 再次校验数据\r\n      this.$refs.editCateRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        // 数据没问题，发起请求\r\n       const {data:res} =  await this.$http.put(`categories/${this.cate.id}`,{cat_name:this.cate.name})\r\n        if(res.meta.status !== 200){\r\n          console.log(res)\r\n          return this.$message.error(\"编辑分类失败！\");\r\n        }\r\n        this.getCateList()\r\n        this.editCateDialogVisible = false\r\n        return this.$message.success(\"编辑分类成功！\")\r\n      })\r\n    },\r\n    // 点击编辑按钮之后的函数\r\n    showEditCateDialog(name,id) {\r\n      this.cate.id = id\r\n      this.cate.name = name;\r\n      this.editCateDialogVisible = true;\r\n    },\r\n    // 监听对话框的关闭事件，重置表单数据\r\n    addCateDialogClosed() {\r\n      this.$refs.addCateFormRef.resetFields();\r\n      this.selectedKeys = [];\r\n      this.addCateForm.cat_level = 0;\r\n      this.addCateForm.cat_pid = 0;\r\n    },\r\n    // 点击按钮，添加新的分类\r\n    addCate() {\r\n      this.$refs.addCateFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.post(\r\n          \"categories\",\r\n          this.addCateForm\r\n        );\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error(\"添加分类失败！\");\r\n        }\r\n        this.$message.success(\"添加分类成功！\");\r\n        this.getCateList();\r\n        this.addCateDialogVisible = false;\r\n      });\r\n    },\r\n    // 选择项发生变化触发这个函数\r\n    parentCateChanged() {\r\n      // 如果 selectedKeys 数组中的 length 大于0，证明选中了父级分类\r\n      // 反之，就说明没有选中任何父级分类\r\n      if (this.selectedKeys.length > 0) {\r\n        // 父级分类的Id\r\n        this.addCateForm.cat_pid =\r\n          this.selectedKeys[this.selectedKeys.length - 1];\r\n        // 为当前分类的等级赋值\r\n        this.addCateForm.cat_level = this.selectedKeys.length;\r\n        return;\r\n      } else {\r\n        // 父级分类的Id\r\n        this.addCateForm.cat_pid = 0;\r\n        // 为当前分类的等级赋值\r\n        this.addCateForm.cat_level = 0;\r\n      }\r\n    },\r\n\r\n    // 获取父级分类的数据列表\r\n    async getParentCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\", {\r\n        params: { type: 2 },\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取父级分类数据失败！\");\r\n      }\r\n      // 获取成功，将值存到数组中\r\n      this.parentCateList = res.data;\r\n    },\r\n    // 点击按钮，展示添加分类的对话框\r\n    showAddCateDialog() {\r\n      // 在展示对话框之前先把商品分类的数据列表给获取一下\r\n      this.getParentCateList();\r\n      this.addCateDialogVisible = true;\r\n    },\r\n    // 获取商品分类数据\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\", {\r\n        params: this.querInfo,\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取商品分类失败！\");\r\n      }\r\n      // 获取成功，把数据赋值给catelist 和 total\r\n      this.catelist = res.data.result;\r\n      this.total = res.data.total;\r\n    },\r\n    // 监听pagesize改变\r\n    handleSizeChange(newSize) {\r\n      this.querInfo.pagesize = newSize;\r\n      this.getCateList();\r\n    },\r\n    // 监听pagenum改变\r\n    handleCurrentChange(newPage) {\r\n      this.querInfo.pagenum = newPage;\r\n      this.getCateList();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.treeTable {\r\n  margin-top: 15px;\r\n}\r\n\r\n.el-cascader {\r\n  width: 100%;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GoodsCate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GoodsCate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GoodsCate.vue?vue&type=template&id=3a59ba2f&scoped=true&\"\nimport script from \"./GoodsCate.vue?vue&type=script&lang=js&\"\nexport * from \"./GoodsCate.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GoodsCate.vue?vue&type=style&index=0&id=3a59ba2f&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3a59ba2f\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"参数列表\")])],1),_c('el-card',[_c('el-alert',{attrs:{\"show-icon\":\"\",\"title\":\"注意：只允许为第三级分类设置相关参数\",\"type\":\"warning\",\"closable\":false}}),_c('el-row',[_c('el-col',[_c('span',{staticClass:\"cat_opt\"},[_vm._v(\"选择商品分类：\")]),_c('el-cascader',{attrs:{\"expand-trigger\":\"hover\",\"options\":_vm.catelist,\"props\":_vm.cateProps},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedCateKeys),callback:function ($$v) {_vm.selectedCateKeys=$$v},expression:\"selectedCateKeys\"}})],1)],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加参数\")]),_c('el-table',{attrs:{\"data\":_vm.manyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleColse(i,scope.row)}}},[_vm._v(_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"label\":\"参数名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-deit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加属性\")]),_c('el-table',{attrs:{\"data\":_vm.onlyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleColse(i,scope.row)}}},[_vm._v(_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"label\":\"属性名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-deit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.titleText,\"visible\":_vm.addDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addDialogVisible=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addFormRef\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.addFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addForm.attr_name),callback:function ($$v) {_vm.$set(_vm.addForm, \"attr_name\", $$v)},expression:\"addForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addParams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.titleText,\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editFormRef\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.editFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editForm.attr_name),callback:function ($$v) {_vm.$set(_vm.editForm, \"attr_name\", $$v)},expression:\"editForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editParams}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 警告区域 -->\r\n      <el-alert\r\n        show-icon=\"\"\r\n        title=\"注意：只允许为第三级分类设置相关参数\"\r\n        type=\"warning\"\r\n        :closable=\"false\"\r\n      ></el-alert>\r\n\r\n      <!-- 选择商品分类区域 -->\r\n      <el-row>\r\n        <el-col>\r\n          <span class=\"cat_opt\">选择商品分类：</span>\r\n          <!-- 选择商品分类的级联选择框 -->\r\n          <el-cascader\r\n            expand-trigger=\"hover\"\r\n            v-model=\"selectedCateKeys\"\r\n            :options=\"catelist\"\r\n            :props=\"cateProps\"\r\n            @change=\"handleChange\"\r\n            \r\n          ></el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- tab 页签区域 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n        <!-- 添加动态参数的面板 -->\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <!-- 添加参数的按钮 -->\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"isBtnDisabled\"\r\n            @click=\"addDialogVisible = true\"\r\n            >添加参数</el-button\r\n          >\r\n          <!-- 动态参数表格 -->\r\n          <el-table :data=\"manyTableData\" border stripe>\r\n            <!-- 展开列 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染Tag标签 -->\r\n                <el-tag\r\n                  v-for=\"(item, i) in scope.row.attr_vals\"\r\n                  :key=\"i\"\r\n                  closable\r\n                  @close=\"handleColse(i,scope.row)\"\r\n                  >{{ item }}</el-tag\r\n                >\r\n                <!-- 输入的文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <!-- 添加按钮 -->\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n            <el-table-column\r\n              label=\"参数名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-deit\"\r\n                  @click=\"showEditDialog(scope.row)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeParams(scope.row.attr_id)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <!-- 添加静态属性的面板 -->\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <!-- 添加属性的按钮 -->\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"isBtnDisabled\"\r\n            @click=\"addDialogVisible = true\"\r\n            >添加属性</el-button\r\n          >\r\n          <el-table :data=\"onlyTableData\" border stripe>\r\n            <!-- 展开列 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染Tag标签 -->\r\n                <el-tag\r\n                  v-for=\"(item, i) in scope.row.attr_vals\"\r\n                  :key=\"i\"\r\n                  closable\r\n                  @close=\"handleColse(i,scope.row)\"\r\n                  >{{ item }}</el-tag\r\n                >\r\n                <!-- 输入的文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <!-- 添加按钮 -->\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n            <el-table-column\r\n              label=\"属性名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-deit\"\r\n                  @click=\"showEditDialog(scope.row)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeParams(scope.row.attr_id)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n\r\n    <!-- 添加参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"'添加' + titleText\"\r\n      :visible.sync=\"addDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addDialogClosed\"\r\n    >\r\n      <el-form\r\n        :model=\"addForm\"\r\n        :rules=\"addFormRules\"\r\n        ref=\"addFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"'添加' + titleText\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"editDialogClosed\"\r\n    >\r\n      <el-form\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        ref=\"editFormRef\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"GoodsParams\",\r\n  data() {\r\n    return {\r\n      // 修改的表单数据对象\r\n      editForm: {},\r\n      editFormRules: {\r\n        attr_name: [\r\n          { required: true, message: \"请输入参数名称\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 控制修改对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      // 添加表单的验证规则对象\r\n      addFormRules: {\r\n        attr_name: [\r\n          { required: true, message: \"请输入参数名称\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 添加参数/属性的表单数据对象\r\n      addForm: {},\r\n      // 控制添加对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      // 动态参数的数据\r\n      manyTableData: [],\r\n      // 静态属性的数据\r\n      onlyTableData: [],\r\n      // 被激活的页签的名称\r\n      activeName: \"many\",\r\n      // 级联选择框双向绑定到的数组\r\n      selectedCateKeys: [],\r\n      //   级联选择框的配置对象\r\n      cateProps: {\r\n        value: \"cat_id\",\r\n        label: \"cat_name\",\r\n        children: \"children\",\r\n      },\r\n      // 商品分类列表\r\n      catelist: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.getCateList();\r\n  },\r\n  methods: {\r\n    // 删除对应的参数可选项\r\n    handleColse(i,row){\r\n      row.attr_vals.splice(i,1)\r\n      this.saveAttrVals(row)\r\n    },\r\n    // 点击按钮，展示文本输入框\r\n    showInput(row) {\r\n      row.inputVisible = true;\r\n      this.$nextTick((_) => {\r\n        this.$refs.saveTagInput.$refs.input.focus();\r\n      });\r\n    },\r\n    // 文本框失去焦点或按下回车键都会触发\r\n    handleInputConfirm(row) {\r\n      if(row.inputValue.trim().length === 0){\r\n        row.inputValue = ''\r\n        row.inputVisible = false\r\n        return\r\n      }\r\n      // 如果没有return出去，则证明输入的内容合法，需要做后续处理\r\n      // 先添加至本地\r\n      row.attr_vals.push(row.inputValue.trim())\r\n      row.inputValue = ''\r\n      row.inputVisible = false\r\n      // 再添加至服务器\r\n      this.saveAttrVals(row)\r\n    },\r\n    async saveAttrVals(row){\r\n      // 需要发起本次请求，保存这次操作\r\n            const {data:res} = await this.$http.put(`categories/${this.cateId}/attributes/${row.attr_id}`,{\r\n        attr_name:row.attr_name,\r\n        attr_sel:row.attr_sel,\r\n        attr_vals:row.attr_vals.join(' '),\r\n      })\r\n      if(res.meta.status !== 200){\r\n        return this.$message.error('修改参数项失败！')\r\n      }\r\n      this.$message.success('修改参数项成功！')\r\n    },\r\n    // 根据Id删除对应的参数项\r\n    async removeParams(attr_id) {\r\n      const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该参数，是否继续？\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n\r\n      // 用户取消了删除的操作\r\n      if (confirmResult !== \"confirm\") {\r\n        return this.$message.info(\"已取消删除！\");\r\n      }\r\n      // 删除的业务逻辑\r\n      const { data: res } = await this.$http.delete(\r\n        `categories/${this.cateId}/attributes/${attr_id}`\r\n      );\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"删除参数失败！\");\r\n      }\r\n\r\n      this.$message.success(\"删除参数成功！\");\r\n      this.getParamsData();\r\n    },\r\n    // 点击按钮，修改参数信息\r\n    editParams() {\r\n      // 再次数据校验\r\n      this.$refs.editFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.put(\r\n          `categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\r\n          { attr_name: this.editForm.attr_name, attr_sel: this.activeName }\r\n        );\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(\"修改参数失败！\");\r\n        }\r\n\r\n        this.$message.success(\"修改参数成功！\");\r\n        this.getParamsData();\r\n        this.editDialogVisible = false;\r\n      });\r\n    },\r\n    // 重置修改的表单\r\n    editDialogClosed() {\r\n      this.$refs.editFormRef.resetFields();\r\n    },\r\n    // 点击按钮，展示修改的对话框\r\n    showEditDialog(data) {\r\n      this.editForm = data;\r\n      this.editDialogVisible = true;\r\n    },\r\n    // 点击按钮，添加参数\r\n    addParams() {\r\n      // 先进行数据校验\r\n      this.$refs.addFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.post(\r\n          `categories/${this.cateId}/attributes`,\r\n          {\r\n            attr_name: this.addForm.attr_name,\r\n            attr_sel: this.activeName,\r\n          }\r\n        );\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error(\"添加参数失败！\");\r\n        }\r\n        // 添加成功\r\n        this.$message.success(\"添加参数成功！\");\r\n        this.addDialogVisible = false;\r\n        this.getParamsData();\r\n      });\r\n    },\r\n    // 当关闭对话框后，清空对话框的输入框内容\r\n    addDialogClosed() {\r\n      this.$refs.addFormRef.resetFields();\r\n    },\r\n    // 获取参数的列表数据\r\n    async getParamsData() {\r\n      //  根据所选分类的Id，和当前所处的面板，获取对应的参数\r\n      const { data: res } = await this.$http.get(\r\n        `categories/${this.cateId}/attributes`,\r\n        {\r\n          params: { sel: this.activeName },\r\n        }\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取参数失败！\");\r\n      }\r\n      // 将attr_vals转为数组\r\n      res.data.forEach((item) => {\r\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(\",\") : [];\r\n        // 控制按钮与文本框的切换显示\r\n        item.inputVisible = false;\r\n        // 文本框中输入的内容\r\n        item.inputValue = \"\";\r\n      });\r\n\r\n      // 获取成功，判断获取到的是静态还是动态的，然后存到响应的数组里\r\n      if (this.activeName === \"many\") {\r\n        this.manyTableData = res.data;\r\n      } else {\r\n        this.onlyTableData = res.data;\r\n      }\r\n    },\r\n    // teb 页签点击事件的处理函数\r\n    handleClick() {\r\n      if (\r\n        this.selectedCateKeys.length !== 2 &&\r\n        this.selectedCateKeys.length !== 3\r\n      ) {\r\n        return;\r\n      }\r\n      this.getParamsData();\r\n    },\r\n    // 级联选择框选中项变化，会触发这个函数\r\n    handleChange() {\r\n      this.getParamsData();\r\n    },\r\n    // 获取所有的商品分类列表\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\");\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取商品分类失败！\");\r\n      }\r\n      this.catelist = res.data;\r\n    },\r\n  },\r\n  computed: {\r\n    // 动态计算对话框标题的文本\r\n    titleText() {\r\n      if (this.activeName === \"many\") {\r\n        return \"动态参数\";\r\n      } else {\r\n        return \"静态属性\";\r\n      }\r\n    },\r\n    // 如果按钮需要被禁用，则返回true，否则返回false\r\n    isBtnDisabled() {\r\n      if (\r\n        this.selectedCateKeys.length !== 3 &&\r\n        this.selectedCateKeys.length !== 2\r\n      ) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 当前选中的三级分类的Id\r\n    cateId() {\r\n      if (this.selectedCateKeys.length === 3) {\r\n        return this.selectedCateKeys[2];\r\n      } else if (this.selectedCateKeys.length === 2) {\r\n        return this.selectedCateKeys[1];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin: 15px 0;\r\n}\r\n\r\n.el-tag,\r\n.el-button,\r\n.input-new-tag,\r\n.button-new-tag {\r\n  margin: 10px;\r\n}\r\n\r\n.input-new-tag {\r\n  width: 120px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GoodsParams.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GoodsParams.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GoodsParams.vue?vue&type=template&id=54fd1b4c&scoped=true&\"\nimport script from \"./GoodsParams.vue?vue&type=script&lang=js&\"\nexport * from \"./GoodsParams.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GoodsParams.vue?vue&type=style&index=0&id=54fd1b4c&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"54fd1b4c\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","path","_v","on","showAddCateDialog","staticClass","catelist","columns","scopedSlots","_u","key","fn","scope","row","cat_deleted","staticStyle","cat_level","_e","$event","showEditCateDialog","cat_name","cat_id","deleteCate","querInfo","pagenum","pagesize","total","handleSizeChange","handleCurrentChange","addCateDialogVisible","addCateDialogClosed","ref","addCateForm","addCateFormRules","model","value","callback","$$v","$set","expression","parentCateList","cascaderProps","parentCateChanged","selectedKeys","slot","addCate","editCateDialogVisible","cate","cateRules","name","editCate","staticRenderFns","data","required","message","trigger","id","label","children","expandTrigger","cat_pid","prop","type","template","created","methods","confirmButtonText","cancelButtonText","catch","err","params","component","cateProps","handleChange","selectedCateKeys","handleClick","activeName","isBtnDisabled","addDialogVisible","manyTableData","_l","attr_vals","item","i","handleColse","_s","inputVisible","handleInputConfirm","nativeOn","indexOf","_k","keyCode","inputValue","showInput","showEditDialog","removeParams","attr_id","onlyTableData","titleText","addDialogClosed","addForm","addFormRules","attr_name","addParams","editDialogVisible","editDialogClosed","editForm","editFormRules","editParams","attr_sel","sel","res","computed","cateId"],"sourceRoot":""}